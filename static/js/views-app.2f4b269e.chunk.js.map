{"version":3,"sources":["components/svg/MenuIcon.js","components/svg/MobileMenuIcon.js","containers/navs/Topnav.EasyAccess.js","data/notifications.js","containers/navs/Topnav.Notifications.js","containers/navs/Topnav.DarkSwitch.js","containers/navs/Topnav.js","constants/menu.js","containers/navs/Sidebar.js","containers/navs/Footer.js","layout/AppLayout.js","views/app/index.js","helpers/IntlMessages.js","components/common/CustomBootstrap.js"],"names":["MenuIcon","className","xmlns","viewBox","x","y","width","height","MobileMenuIcon","TopnavEasyAccess","UncontrolledDropdown","DropdownToggle","color","DropdownMenu","right","id","to","IntlMessages","data","img","title","date","NotificationItem","href","src","alt","TopnavNotifications","options","suppressScrollX","wheelPropagation","notifications","map","notification","index","key","TopnavDarkSwitch","useState","switchChecked","setSwitchChecked","tooltipOpen","setTooltipOpen","useEffect","getCurrentColor","indexOf","checked","onChange","replace","setCurrentColor","setTimeout","window","location","reload","Tooltip","placement","isOpen","target","toggle","injectIntl","connect","menu","settings","containerClassnames","menuClickCount","selectedMenuHasSubItems","locale","setContainerClassnamesAction","setContainerClassnames","clickOnMobileMenuAction","clickOnMobileMenu","changeLocaleAction","changeLocale","intl","history","isInFullScreen","setIsInFullScreen","searchKeyword","setSearchKeyword","search","push","searchPath","handleDocumentClickSearch","e","isSearchClick","classList","contains","parentElement","input","document","querySelector","remove","removeEventsSearch","removeEventListener","addEventsSearch","addEventListener","messages","onClick","_clickCount","_conClassnames","preventDefault","event","createEvent","initEvent","dispatchEvent","menuButtonClick","_containerClassnames","mobileMenuButtonClick","Input","name","placeholder","value","onKeyPress","handleSearchInputKeyPress","innerWidth","menuHiddenBreakpoint","elem","add","stopPropagation","handleSearchIconClick","caret","size","toUpperCase","localeOptions","l","DropdownItem","_locale","direction","getDirection","setDirection","handleChangeLocale","adminRoot","isDarkSwitchActive","type","isFS","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","docElm","documentElement","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","requestFullscreen","mozRequestFullScreen","webkitRequestFullScreen","msRequestFullscreen","divider","console","log","icon","label","Sidebar","Component","constructor","props","super","handleWindowResize","isTrusted","this","nextClasses","getMenuClassesForResize","join","handleDocumentClick","container","getContainer","isMenuClick","setState","viewingParentMenu","classes","subHiddenBreakpoint","split","filter","windowWidth","includes","ReactDOM","findDOMNode","hasSubItems","getIsHasSubItem","changeSelectedMenuHasSubItems","currentClasses","clickIndex","handleProps","addEvents","forEach","removeEvents","setSelectedLiActive","callback","oldli","oldliSub","selectedSublink","selectedlink","selectedParentMenu","getAttribute","selectedParentNoSubItem","state","menuItems","setHasSubItemStatus","hasSubmenu","menuItem","find","subs","length","openSubMenu","selectedParent","hasSubMenu","addContainerClassname","toggleMenuCollapse","menuKey","collapsedMenus","filteredList","role","currentUser","roles","componentDidUpdate","prevProps","pathname","scrollTo","componentDidMount","componentWillUnmount","render","Nav","vertical","item","NavItem","classnames","active","newWindow","rel","data-flag","data-parent","sub","Collapse","thirdSub","thirdIndex","withRouter","authUser","changeDefaultClassnames","Footer","Row","xxs","sm","children","Gogo","React","lazy","SecondMenu","BlankPage","match","fallback","exact","from","url","path","withRef","Colxx","widths","Separator"],"mappings":"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","file":"static/js/views-app.2f4b269e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst MenuIcon = () => {\r\n  return (\r\n    <>\r\n      <svg\r\n        className=\"main\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 9 17\"\r\n      >\r\n        <rect x=\"0.48\" y=\"0.5\" width=\"7\" height=\"1\" />\r\n        <rect x=\"0.48\" y=\"7.5\" width=\"7\" height=\"1\" />\r\n        <rect x=\"0.48\" y=\"15.5\" width=\"7\" height=\"1\" />\r\n      </svg>\r\n      <svg\r\n        className=\"sub\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 18 17\"\r\n      >\r\n        <rect x=\"1.56\" y=\"0.5\" width=\"16\" height=\"1\" />\r\n        <rect x=\"1.56\" y=\"7.5\" width=\"16\" height=\"1\" />\r\n        <rect x=\"1.56\" y=\"15.5\" width=\"16\" height=\"1\" />\r\n      </svg>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MenuIcon;\r\n","import React from 'react';\r\n\r\nconst MobileMenuIcon = () => {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 26 17\">\r\n      <rect x=\"0.5\" y=\"0.5\" width=\"25\" height=\"1\" />\r\n      <rect x=\"0.5\" y=\"7.5\" width=\"25\" height=\"1\" />\r\n      <rect x=\"0.5\" y=\"15.5\" width=\"25\" height=\"1\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default MobileMenuIcon;\r\n","import React from 'react';\r\nimport { UncontrolledDropdown, DropdownToggle, DropdownMenu } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\n\r\nconst TopnavEasyAccess = () => {\r\n  return (\r\n    <div className=\"position-relative d-none d-sm-inline-block\">\r\n      <UncontrolledDropdown className=\"dropdown-menu-right\">\r\n        <DropdownToggle className=\"header-icon\" color=\"empty\">\r\n          <i className=\"simple-icon-grid\" />\r\n        </DropdownToggle>\r\n        <DropdownMenu\r\n          className=\"position-absolute mt-3\"\r\n          right\r\n          id=\"iconMenuDropdown\"\r\n        >\r\n          <NavLink to=\"#\" className=\"icon-menu-item\">\r\n            <i className=\"iconsminds-shop-4 d-block\" />{' '}\r\n            <IntlMessages id=\"menu.dashboards\" />\r\n          </NavLink>\r\n\r\n          <NavLink to=\"#\" className=\"icon-menu-item\">\r\n            <i className=\"iconsminds-pantone d-block\" />{' '}\r\n            <IntlMessages id=\"menu.ui\" />\r\n          </NavLink>\r\n          <NavLink to=\"#\" className=\"icon-menu-item\">\r\n            <i className=\"iconsminds-bar-chart-4 d-block\" />{' '}\r\n            <IntlMessages id=\"menu.charts\" />\r\n          </NavLink>\r\n          <NavLink to=\"#\" className=\"icon-menu-item\">\r\n            <i className=\"iconsminds-speach-bubble d-block\" />{' '}\r\n            <IntlMessages id=\"menu.chat\" />\r\n          </NavLink>\r\n          <NavLink to=\"#\" className=\"icon-menu-item\">\r\n            <i className=\"iconsminds-formula d-block\" />{' '}\r\n            <IntlMessages id=\"menu.survey\" />\r\n          </NavLink>\r\n          <NavLink to=\"#\" className=\"icon-menu-item\">\r\n            <i className=\"iconsminds-check d-block\" />{' '}\r\n            <IntlMessages id=\"menu.todo\" />\r\n          </NavLink>\r\n        </DropdownMenu>\r\n      </UncontrolledDropdown>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopnavEasyAccess;\r\n","const data = [\r\n  {\r\n    img: '/assets/img/profiles/l-2.jpg',\r\n    title: 'Joisse Kaycee just sent a new comment!',\r\n    date: '09.04.2018 - 12:45',\r\n    id: 1,\r\n  },\r\n  {\r\n    img: '/assets/img/notifications/thumb-1.jpg',\r\n    title: '1 item is out of stock!',\r\n    date: '09.04.2018 - 12:45',\r\n    id: 2,\r\n  },\r\n  {\r\n    img: '/assets/img/notifications/thumb-2.jpg',\r\n    title: 'New order received! It is total $147,20.',\r\n    date: '09.04.2018 - 12:45',\r\n    id: 3,\r\n  },\r\n  {\r\n    img: '/assets/img/notifications/thumb-3.jpg',\r\n    title: '3 items just added to wish list by a user!',\r\n    date: '09.04.2018 - 12:45',\r\n    id: 4,\r\n  },\r\n];\r\nexport default data;\r\n","/* eslint-disable react/no-array-index-key */\r\nimport React from 'react';\r\nimport { UncontrolledDropdown, DropdownToggle, DropdownMenu } from 'reactstrap';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\nimport notifications from '../../data/notifications';\r\n\r\nconst NotificationItem = ({ img, title, date }) => {\r\n  return (\r\n    <div className=\"d-flex flex-row mb-3 pb-3 border-bottom\">\r\n      <a href=\"#detail\">\r\n        <img\r\n          src={img}\r\n          alt={title}\r\n          className=\"img-thumbnail list-thumbnail xsmall border-0 rounded-circle\"\r\n        />\r\n      </a>\r\n      <div className=\"pl-3 pr-2\">\r\n        <a href=\"#detail\">\r\n          <p className=\"font-weight-medium mb-1\">{title}</p>\r\n          <p className=\"text-muted mb-0 text-small\">{date}</p>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TopnavNotifications = () => {\r\n  return (\r\n    <div className=\"position-relative d-inline-block\">\r\n      <UncontrolledDropdown className=\"dropdown-menu-right\">\r\n        <DropdownToggle\r\n          className=\"header-icon notificationButton\"\r\n          color=\"empty\"\r\n        >\r\n          <i className=\"simple-icon-bell\" />\r\n          <span className=\"count\">3</span>\r\n        </DropdownToggle>\r\n        <DropdownMenu\r\n          className=\"position-absolute mt-3 scroll\"\r\n          right\r\n          id=\"notificationDropdown\"\r\n        >\r\n          <PerfectScrollbar\r\n            options={{ suppressScrollX: true, wheelPropagation: false }}\r\n          >\r\n            {notifications.map((notification, index) => {\r\n              return <NotificationItem key={index} {...notification} />;\r\n            })}\r\n          </PerfectScrollbar>\r\n        </DropdownMenu>\r\n      </UncontrolledDropdown>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopnavNotifications;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Switch from 'rc-switch';\r\nimport 'rc-switch/assets/index.css';\r\nimport { Tooltip } from 'reactstrap';\r\nimport { getCurrentColor, setCurrentColor } from '../../helpers/Utils';\r\n\r\nconst TopnavDarkSwitch = () => {\r\n  const [switchChecked, setSwitchChecked] = useState(false);\r\n  const [tooltipOpen, setTooltipOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const color = getCurrentColor();\r\n    setSwitchChecked(color.indexOf('dark') > -1);\r\n  }, []);\r\n\r\n  const changeMode = () => {\r\n    let color = getCurrentColor();\r\n\r\n    if (color.indexOf('dark') > -1) {\r\n      color = color.replace('dark', 'light');\r\n    } else if (color.indexOf('light') > -1) {\r\n      color = color.replace('light', 'dark');\r\n    }\r\n    setCurrentColor(color);\r\n    setSwitchChecked(color.indexOf('dark') > -1);\r\n    setTimeout(() => {\r\n      window.location.reload();\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-none d-md-inline-block align-middle mr-3\">\r\n      <Switch\r\n        id=\"tooltip_switch\"\r\n        className=\"custom-switch custom-switch-primary custom-switch-small\"\r\n        checked={switchChecked}\r\n        onChange={changeMode}\r\n      />\r\n      <Tooltip\r\n        placement=\"left\"\r\n        isOpen={tooltipOpen}\r\n        target=\"tooltip_switch\"\r\n        toggle={() => setTooltipOpen(!tooltipOpen)}\r\n      >\r\n        Dark Mode\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n};\r\nexport default TopnavDarkSwitch;\r\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable no-use-before-define */\r\nimport React, { useState } from 'react';\r\nimport { injectIntl } from 'react-intl';\r\n\r\nimport {\r\n  UncontrolledDropdown,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  Input,\r\n} from 'reactstrap';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n  setContainerClassnames,\r\n  clickOnMobileMenu,\r\n  changeLocale,\r\n} from '../../redux/actions';\r\n\r\nimport {\r\n  menuHiddenBreakpoint,\r\n  searchPath,\r\n  localeOptions,\r\n  isDarkSwitchActive,\r\n  adminRoot,\r\n} from '../../constants/defaultValues';\r\n\r\nimport { MobileMenuIcon, MenuIcon } from '../../components/svg';\r\nimport TopnavEasyAccess from './Topnav.EasyAccess';\r\nimport TopnavNotifications from './Topnav.Notifications';\r\nimport TopnavDarkSwitch from './Topnav.DarkSwitch';\r\n\r\nimport { getDirection, setDirection } from '../../helpers/Utils';\r\n\r\nconst TopNav = ({\r\n  intl,\r\n  history,\r\n  containerClassnames,\r\n  menuClickCount,\r\n  selectedMenuHasSubItems,\r\n  locale,\r\n  setContainerClassnamesAction,\r\n  clickOnMobileMenuAction,\r\n  changeLocaleAction,\r\n}) => {\r\n  const [isInFullScreen, setIsInFullScreen] = useState(false);\r\n  const [searchKeyword, setSearchKeyword] = useState('');\r\n\r\n  const search = () => {\r\n    history.push(`${searchPath}?key=${searchKeyword}`);\r\n    setSearchKeyword('');\r\n  };\r\n\r\n  const handleChangeLocale = (_locale, direction) => {\r\n    changeLocaleAction(_locale);\r\n\r\n    const currentDirection = getDirection().direction;\r\n    if (direction !== currentDirection) {\r\n      setDirection(direction);\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500);\r\n    }\r\n  };\r\n\r\n  const isInFullScreenFn = () => {\r\n    return (\r\n      (document.fullscreenElement && document.fullscreenElement !== null) ||\r\n      (document.webkitFullscreenElement &&\r\n        document.webkitFullscreenElement !== null) ||\r\n      (document.mozFullScreenElement &&\r\n        document.mozFullScreenElement !== null) ||\r\n      (document.msFullscreenElement && document.msFullscreenElement !== null)\r\n    );\r\n  };\r\n\r\n  const handleSearchIconClick = (e) => {\r\n    if (window.innerWidth < menuHiddenBreakpoint) {\r\n      let elem = e.target;\r\n      if (!e.target.classList.contains('search')) {\r\n        if (e.target.parentElement.classList.contains('search')) {\r\n          elem = e.target.parentElement;\r\n        } else if (\r\n          e.target.parentElement.parentElement.classList.contains('search')\r\n        ) {\r\n          elem = e.target.parentElement.parentElement;\r\n        }\r\n      }\r\n\r\n      if (elem.classList.contains('mobile-view')) {\r\n        search();\r\n        elem.classList.remove('mobile-view');\r\n        removeEventsSearch();\r\n      } else {\r\n        elem.classList.add('mobile-view');\r\n        addEventsSearch();\r\n      }\r\n    } else {\r\n      search();\r\n    }\r\n    e.stopPropagation();\r\n  };\r\n\r\n  const handleDocumentClickSearch = (e) => {\r\n    let isSearchClick = false;\r\n    if (\r\n      e.target &&\r\n      e.target.classList &&\r\n      (e.target.classList.contains('navbar') ||\r\n        e.target.classList.contains('simple-icon-magnifier'))\r\n    ) {\r\n      isSearchClick = true;\r\n      if (e.target.classList.contains('simple-icon-magnifier')) {\r\n        search();\r\n      }\r\n    } else if (\r\n      e.target.parentElement &&\r\n      e.target.parentElement.classList &&\r\n      e.target.parentElement.classList.contains('search')\r\n    ) {\r\n      isSearchClick = true;\r\n    }\r\n\r\n    if (!isSearchClick) {\r\n      const input = document.querySelector('.mobile-view');\r\n      if (input && input.classList) input.classList.remove('mobile-view');\r\n      removeEventsSearch();\r\n      setSearchKeyword('');\r\n    }\r\n  };\r\n\r\n  const removeEventsSearch = () => {\r\n    document.removeEventListener('click', handleDocumentClickSearch, true);\r\n  };\r\n\r\n  const addEventsSearch = () => {\r\n    document.addEventListener('click', handleDocumentClickSearch, true);\r\n  };\r\n\r\n  const handleSearchInputKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      search();\r\n    }\r\n  };\r\n\r\n  const toggleFullScreen = () => {\r\n    const isFS = isInFullScreenFn();\r\n\r\n    const docElm = document.documentElement;\r\n    if (!isFS) {\r\n      if (docElm.requestFullscreen) {\r\n        docElm.requestFullscreen();\r\n      } else if (docElm.mozRequestFullScreen) {\r\n        docElm.mozRequestFullScreen();\r\n      } else if (docElm.webkitRequestFullScreen) {\r\n        docElm.webkitRequestFullScreen();\r\n      } else if (docElm.msRequestFullscreen) {\r\n        docElm.msRequestFullscreen();\r\n      }\r\n    } else if (document.exitFullscreen) {\r\n      document.exitFullscreen();\r\n    } else if (document.webkitExitFullscreen) {\r\n      document.webkitExitFullscreen();\r\n    } else if (document.mozCancelFullScreen) {\r\n      document.mozCancelFullScreen();\r\n    } else if (document.msExitFullscreen) {\r\n      document.msExitFullscreen();\r\n    }\r\n    setIsInFullScreen(!isFS);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    console.log('logout');\r\n  };\r\n\r\n  const menuButtonClick = (e, _clickCount, _conClassnames) => {\r\n    e.preventDefault();\r\n\r\n    setTimeout(() => {\r\n      const event = document.createEvent('HTMLEvents');\r\n      event.initEvent('resize', false, false);\r\n      window.dispatchEvent(event);\r\n    }, 350);\r\n    setContainerClassnamesAction(\r\n      _clickCount + 1,\r\n      _conClassnames,\r\n      selectedMenuHasSubItems\r\n    );\r\n  };\r\n\r\n  const mobileMenuButtonClick = (e, _containerClassnames) => {\r\n    e.preventDefault();\r\n    clickOnMobileMenuAction(_containerClassnames);\r\n  };\r\n\r\n  const { messages } = intl;\r\n  return (\r\n    <nav className=\"navbar fixed-top\">\r\n      <div className=\"d-flex align-items-center navbar-left\">\r\n        <NavLink\r\n          to=\"#\"\r\n          location={{}}\r\n          className=\"menu-button d-none d-md-block\"\r\n          onClick={(e) =>\r\n            menuButtonClick(e, menuClickCount, containerClassnames)\r\n          }\r\n        >\r\n          <MenuIcon />\r\n        </NavLink>\r\n        <NavLink\r\n          to=\"#\"\r\n          location={{}}\r\n          className=\"menu-button-mobile d-xs-block d-sm-block d-md-none\"\r\n          onClick={(e) => mobileMenuButtonClick(e, containerClassnames)}\r\n        >\r\n          <MobileMenuIcon />\r\n        </NavLink>\r\n\r\n        <div className=\"search\">\r\n          <Input\r\n            name=\"searchKeyword\"\r\n            id=\"searchKeyword\"\r\n            placeholder={messages['menu.search']}\r\n            value={searchKeyword}\r\n            onChange={(e) => setSearchKeyword(e.target.value)}\r\n            onKeyPress={(e) => handleSearchInputKeyPress(e)}\r\n          />\r\n          <span\r\n            className=\"search-icon\"\r\n            onClick={(e) => handleSearchIconClick(e)}\r\n          >\r\n            <i className=\"simple-icon-magnifier\" />\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"d-inline-block\">\r\n          <UncontrolledDropdown className=\"ml-2\">\r\n            <DropdownToggle\r\n              caret\r\n              color=\"light\"\r\n              size=\"sm\"\r\n              className=\"language-button\"\r\n            >\r\n              <span className=\"name\">{locale.toUpperCase()}</span>\r\n            </DropdownToggle>\r\n            <DropdownMenu className=\"mt-3\" right>\r\n              {localeOptions.map((l) => {\r\n                return (\r\n                  <DropdownItem\r\n                    onClick={() => handleChangeLocale(l.id, l.direction)}\r\n                    key={l.id}\r\n                  >\r\n                    {l.name}\r\n                  </DropdownItem>\r\n                );\r\n              })}\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n        </div>\r\n      </div>\r\n      <NavLink className=\"navbar-logo\" to={adminRoot}>\r\n        <span className=\"logo d-none d-xs-block\" />\r\n        <span className=\"logo-mobile d-block d-xs-none\" />\r\n      </NavLink>\r\n\r\n      <div className=\"navbar-right\">\r\n        {isDarkSwitchActive && <TopnavDarkSwitch />}\r\n        <div className=\"header-icons d-inline-block align-middle\">\r\n          <TopnavEasyAccess />\r\n          <TopnavNotifications />\r\n          <button\r\n            className=\"header-icon btn btn-empty d-none d-sm-inline-block\"\r\n            type=\"button\"\r\n            id=\"fullScreenButton\"\r\n            onClick={toggleFullScreen}\r\n          >\r\n            {isInFullScreen ? (\r\n              <i className=\"simple-icon-size-actual d-block\" />\r\n            ) : (\r\n              <i className=\"simple-icon-size-fullscreen d-block\" />\r\n            )}\r\n          </button>\r\n        </div>\r\n        <div className=\"user d-inline-block\">\r\n          <UncontrolledDropdown className=\"dropdown-menu-right\">\r\n            <DropdownToggle className=\"p-0\" color=\"empty\">\r\n              <span className=\"name mr-1\">Sarah Kortney</span>\r\n              <span>\r\n                <img alt=\"Profile\" src=\"/assets/img/profiles/l-1.jpg\" />\r\n              </span>\r\n            </DropdownToggle>\r\n            <DropdownMenu className=\"mt-3\" right>\r\n              <DropdownItem>Perfil</DropdownItem>         \r\n              <DropdownItem divider />\r\n              <DropdownItem onClick={() => handleLogout()}>\r\n                Salir\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ menu, settings }) => {\r\n  const { containerClassnames, menuClickCount, selectedMenuHasSubItems } = menu;\r\n  const { locale } = settings;\r\n  return {\r\n    containerClassnames,\r\n    menuClickCount,\r\n    selectedMenuHasSubItems,\r\n    locale,\r\n  };\r\n};\r\nexport default injectIntl(\r\n  connect(mapStateToProps, {\r\n    setContainerClassnamesAction: setContainerClassnames,\r\n    clickOnMobileMenuAction: clickOnMobileMenu,\r\n    changeLocaleAction: changeLocale,\r\n  })(TopNav)\r\n);\r\n","import { adminRoot } from \"./defaultValues\";\r\n// import { UserRole } from \"../helpers/authHelper\"\r\n\r\nconst data = [\r\n  {\r\n    id: 'gogo',\r\n    icon: 'simple-icon-link',\r\n    label: 'menu.gogo',\r\n    to: `${adminRoot}/gogo/start`,\r\n   \r\n  },\r\n /*  {\r\n    id: 'secondmenu',\r\n    icon: 'iconsminds-three-arrow-fork',\r\n    label: 'menu.second-menu',\r\n    to: `${adminRoot}/second-menu`,\r\n    // roles: [UserRole.Admin, UserRole.Editor],\r\n    subs: [\r\n      {\r\n        icon: 'simple-icon-paper-plane',\r\n        label: 'menu.second',\r\n        to: `${adminRoot}/second-menu/second`,\r\n      },\r\n    ],\r\n  }, */\r\n  // {\r\n  //   id: 'blankpage',\r\n  //   icon: 'iconsminds-bucket',\r\n  //   label: 'menu.blank-page',\r\n  //   to: `${adminRoot}/blank-page`,\r\n  // },\r\n\r\n];\r\nexport default data;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ReactDOM from 'react-dom';\r\nimport { Nav, NavItem, Collapse } from 'reactstrap';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport classnames from 'classnames';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\n\r\nimport {\r\n  setContainerClassnames,\r\n  addContainerClassname,\r\n  changeDefaultClassnames,\r\n  changeSelectedMenuHasSubItems,\r\n\r\n} from '../../redux/actions';\r\n\r\nimport menuItems from '../../constants/menu';\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedParentMenu: '',\r\n      viewingParentMenu: '',\r\n      collapsedMenus: [],\r\n    };\r\n  }\r\n\r\n  handleWindowResize = (event) => {\r\n    if (event && !event.isTrusted) {\r\n      return;\r\n    }\r\n    const { containerClassnames } = this.props;\r\n    const nextClasses = this.getMenuClassesForResize(containerClassnames);\r\n    this.props.setContainerClassnames(\r\n      0,\r\n      nextClasses.join(' '),\r\n      this.props.selectedMenuHasSubItems\r\n    );\r\n  };\r\n\r\n  handleDocumentClick = (e) => {\r\n    const container = this.getContainer();\r\n    let isMenuClick = false;\r\n    if (\r\n      e.target &&\r\n      e.target.classList &&\r\n      (e.target.classList.contains('menu-button') ||\r\n        e.target.classList.contains('menu-button-mobile'))\r\n    ) {\r\n      isMenuClick = true;\r\n    } else if (\r\n      e.target.parentElement &&\r\n      e.target.parentElement.classList &&\r\n      (e.target.parentElement.classList.contains('menu-button') ||\r\n        e.target.parentElement.classList.contains('menu-button-mobile'))\r\n    ) {\r\n      isMenuClick = true;\r\n    } else if (\r\n      e.target.parentElement &&\r\n      e.target.parentElement.parentElement &&\r\n      e.target.parentElement.parentElement.classList &&\r\n      (e.target.parentElement.parentElement.classList.contains('menu-button') ||\r\n        e.target.parentElement.parentElement.classList.contains(\r\n          'menu-button-mobile'\r\n        ))\r\n    ) {\r\n      isMenuClick = true;\r\n    }\r\n    if (container.contains(e.target) || container === e.target || isMenuClick) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      viewingParentMenu: '',\r\n    });\r\n    this.toggle();\r\n  };\r\n\r\n  getMenuClassesForResize = (classes) => {\r\n    const { menuHiddenBreakpoint, subHiddenBreakpoint } = this.props;\r\n    let nextClasses = classes.split(' ').filter((x) => x !== '');\r\n    const windowWidth = window.innerWidth;\r\n    if (windowWidth < menuHiddenBreakpoint) {\r\n      nextClasses.push('menu-mobile');\r\n    } else if (windowWidth < subHiddenBreakpoint) {\r\n      nextClasses = nextClasses.filter((x) => x !== 'menu-mobile');\r\n      if (\r\n        nextClasses.includes('menu-default') &&\r\n        !nextClasses.includes('menu-sub-hidden')\r\n      ) {\r\n        nextClasses.push('menu-sub-hidden');\r\n      }\r\n    } else {\r\n      nextClasses = nextClasses.filter((x) => x !== 'menu-mobile');\r\n      if (\r\n        nextClasses.includes('menu-default') &&\r\n        nextClasses.includes('menu-sub-hidden')\r\n      ) {\r\n        nextClasses = nextClasses.filter((x) => x !== 'menu-sub-hidden');\r\n      }\r\n    }\r\n    return nextClasses;\r\n  };\r\n\r\n  getContainer = () => {\r\n    return ReactDOM.findDOMNode(this);\r\n  };\r\n\r\n  toggle = () => {\r\n    const hasSubItems = this.getIsHasSubItem();\r\n    this.props.changeSelectedMenuHasSubItems(hasSubItems);\r\n    const { containerClassnames, menuClickCount } = this.props;\r\n    const currentClasses = containerClassnames\r\n      ? containerClassnames.split(' ').filter((x) => x !== '')\r\n      : '';\r\n    let clickIndex = -1;\r\n\r\n    if (!hasSubItems) {\r\n      if (\r\n        currentClasses.includes('menu-default') &&\r\n        (menuClickCount % 4 === 0 || menuClickCount % 4 === 3)\r\n      ) {\r\n        clickIndex = 1;\r\n      } else if (\r\n        currentClasses.includes('menu-sub-hidden') &&\r\n        (menuClickCount === 2 || menuClickCount === 3)\r\n      ) {\r\n        clickIndex = 0;\r\n      } else if (\r\n        currentClasses.includes('menu-hidden') ||\r\n        currentClasses.includes('menu-mobile')\r\n      ) {\r\n        clickIndex = 0;\r\n      }\r\n    } else if (\r\n      currentClasses.includes('menu-sub-hidden') &&\r\n      menuClickCount === 3\r\n    ) {\r\n      clickIndex = 2;\r\n    } else if (\r\n      currentClasses.includes('menu-hidden') ||\r\n      currentClasses.includes('menu-mobile')\r\n    ) {\r\n      clickIndex = 0;\r\n    }\r\n    if (clickIndex >= 0) {\r\n      this.props.setContainerClassnames(\r\n        clickIndex,\r\n        containerClassnames,\r\n        hasSubItems\r\n      );\r\n    }\r\n  };\r\n\r\n  handleProps = () => {\r\n    this.addEvents();\r\n  };\r\n\r\n  addEvents = () => {\r\n    ['click', 'touchstart', 'touchend'].forEach((event) =>\r\n      document.addEventListener(event, this.handleDocumentClick, true)\r\n    );\r\n  };\r\n\r\n  removeEvents = () => {\r\n    ['click', 'touchstart', 'touchend'].forEach((event) =>\r\n      document.removeEventListener(event, this.handleDocumentClick, true)\r\n    );\r\n  };\r\n\r\n  setSelectedLiActive = (callback) => {\r\n    const oldli = document.querySelector('.sub-menu  li.active');\r\n    if (oldli != null) {\r\n      oldli.classList.remove('active');\r\n    }\r\n\r\n    const oldliSub = document.querySelector('.third-level-menu  li.active');\r\n    if (oldliSub != null) {\r\n      oldliSub.classList.remove('active');\r\n    }\r\n\r\n    /* set selected parent menu */\r\n    const selectedSublink = document.querySelector(\r\n      '.third-level-menu  a.active'\r\n    );\r\n    if (selectedSublink != null) {\r\n      selectedSublink.parentElement.classList.add('active');\r\n    }\r\n\r\n    const selectedlink = document.querySelector('.sub-menu  a.active');\r\n    if (selectedlink != null) {\r\n      selectedlink.parentElement.classList.add('active');\r\n      this.setState(\r\n        {\r\n          selectedParentMenu: selectedlink.parentElement.parentElement.getAttribute(\r\n            'data-parent'\r\n          ),\r\n        },\r\n        callback\r\n      );\r\n    } else {\r\n      const selectedParentNoSubItem = document.querySelector(\r\n        '.main-menu  li a.active'\r\n      );\r\n      if (selectedParentNoSubItem != null) {\r\n        this.setState(\r\n          {\r\n            selectedParentMenu: selectedParentNoSubItem.getAttribute(\r\n              'data-flag'\r\n            ),\r\n          },\r\n          callback\r\n        );\r\n      } else if (this.state.selectedParentMenu === '') {\r\n        this.setState(\r\n          {\r\n            selectedParentMenu: menuItems[0].id,\r\n          },\r\n          callback\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  setHasSubItemStatus = () => {\r\n    const hasSubmenu = this.getIsHasSubItem();\r\n    this.props.changeSelectedMenuHasSubItems(hasSubmenu);\r\n    this.toggle();\r\n  };\r\n\r\n  getIsHasSubItem = () => {\r\n    const { selectedParentMenu } = this.state;\r\n    const menuItem = menuItems.find((x) => x.id === selectedParentMenu);\r\n    if (menuItem)\r\n      return !!(menuItem && menuItem.subs && menuItem.subs.length > 0);\r\n    return false;\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location.pathname !== prevProps.location.pathname) {\r\n      this.setSelectedLiActive(this.setHasSubItemStatus);\r\n\r\n      window.scrollTo(0, 0);\r\n    }\r\n    this.handleProps();\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.handleWindowResize);\r\n    this.handleWindowResize();\r\n    this.handleProps();\r\n    this.setSelectedLiActive(this.setHasSubItemStatus);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removeEvents();\r\n    window.removeEventListener('resize', this.handleWindowResize);\r\n  }\r\n\r\n  openSubMenu = (e, menuItem) => {\r\n    const selectedParent = menuItem.id;\r\n    const hasSubMenu = menuItem.subs && menuItem.subs.length > 0;\r\n    this.props.changeSelectedMenuHasSubItems(hasSubMenu);\r\n    if (!hasSubMenu) {\r\n      this.setState({\r\n        viewingParentMenu: selectedParent,\r\n        selectedParentMenu: selectedParent,\r\n      });\r\n      this.toggle();\r\n    } else {\r\n      e.preventDefault();\r\n\r\n      const { containerClassnames, menuClickCount } = this.props;\r\n      const currentClasses = containerClassnames\r\n        ? containerClassnames.split(' ').filter((x) => x !== '')\r\n        : '';\r\n\r\n      if (!currentClasses.includes('menu-mobile')) {\r\n        if (\r\n          currentClasses.includes('menu-sub-hidden') &&\r\n          (menuClickCount === 2 || menuClickCount === 0)\r\n        ) {\r\n          this.props.setContainerClassnames(3, containerClassnames, hasSubMenu);\r\n        } else if (\r\n          currentClasses.includes('menu-hidden') &&\r\n          (menuClickCount === 1 || menuClickCount === 3)\r\n        ) {\r\n          this.props.setContainerClassnames(2, containerClassnames, hasSubMenu);\r\n        } else if (\r\n          currentClasses.includes('menu-default') &&\r\n          !currentClasses.includes('menu-sub-hidden') &&\r\n          (menuClickCount === 1 || menuClickCount === 3)\r\n        ) {\r\n          this.props.setContainerClassnames(0, containerClassnames, hasSubMenu);\r\n        }\r\n      } else {\r\n        this.props.addContainerClassname(\r\n          'sub-show-temporary',\r\n          containerClassnames\r\n        );\r\n      }\r\n      this.setState({\r\n        viewingParentMenu: selectedParent,\r\n      });\r\n    }\r\n  };\r\n\r\n  toggleMenuCollapse = (e, menuKey) => {\r\n    e.preventDefault();\r\n\r\n    const { collapsedMenus } = this.state;\r\n    if (collapsedMenus.indexOf(menuKey) > -1) {\r\n      this.setState({\r\n        collapsedMenus: collapsedMenus.filter((x) => x !== menuKey),\r\n      });\r\n    } else {\r\n      collapsedMenus.push(menuKey);\r\n      this.setState({\r\n        collapsedMenus,\r\n      });\r\n    }\r\n    return false;\r\n  };\r\n\r\n  filteredList = (menuItems) => {\r\n    const { currentUser: { role } } = this.props;\r\n    return menuItems.filter(x => (x.roles && x.roles.includes(role)) || !x.roles)\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n\r\n\r\n    const {\r\n      selectedParentMenu,\r\n      viewingParentMenu,\r\n      collapsedMenus,\r\n    } = this.state;\r\n    return (\r\n      <div className=\"sidebar\">\r\n        <div className=\"main-menu\">\r\n          <div className=\"scroll\">\r\n            <PerfectScrollbar\r\n              options={{ suppressScrollX: true, wheelPropagation: false }}\r\n            >\r\n              <Nav vertical className=\"list-unstyled\">\r\n                {menuItems &&\r\n                  this.filteredList(menuItems).map((item) => {\r\n                    return (\r\n                      <NavItem\r\n                        key={item.id}\r\n                        className={classnames({\r\n                          active:\r\n                            (selectedParentMenu === item.id &&\r\n                              viewingParentMenu === '') ||\r\n                            viewingParentMenu === item.id,\r\n                        })}\r\n                      >\r\n                        {item.newWindow ? (\r\n                          <a\r\n                            href={item.to}\r\n                            rel=\"noopener noreferrer\"\r\n                            target=\"_blank\"\r\n                          >\r\n                            <i className={item.icon} />{' '}\r\n                            <IntlMessages id={item.label} />\r\n                          </a>\r\n                        ) : (\r\n                            <NavLink\r\n                              to={item.to}\r\n                              onClick={(e) => this.openSubMenu(e, item)}\r\n                              data-flag={item.id}\r\n                            >\r\n                              <i className={item.icon} />{' '}\r\n                              <IntlMessages id={item.label} />\r\n                            </NavLink>\r\n                          )}\r\n                      </NavItem>\r\n                    );\r\n                  })}\r\n              </Nav>\r\n            </PerfectScrollbar>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"sub-menu\">\r\n          <div className=\"scroll\">\r\n            <PerfectScrollbar\r\n              options={{ suppressScrollX: true, wheelPropagation: false }}\r\n            >\r\n              {menuItems &&\r\n                this.filteredList(menuItems).map((item) => {\r\n                  return (\r\n                    <Nav\r\n                      key={item.id}\r\n                      className={classnames({\r\n                        'd-block':\r\n                          (this.state.selectedParentMenu === item.id &&\r\n                            this.state.viewingParentMenu === '') ||\r\n                          this.state.viewingParentMenu === item.id,\r\n                      })}\r\n                      data-parent={item.id}\r\n                    >\r\n                      {item.subs &&\r\n                        this.filteredList(item.subs).map((sub, index) => {\r\n                          return (\r\n                            <NavItem\r\n                              key={`${item.id}_${index}`}\r\n                              className={`${\r\n                                sub.subs && sub.subs.length > 0\r\n                                  ? 'has-sub-item'\r\n                                  : ''\r\n                                }`}\r\n                            >\r\n                              {sub.newWindow ? (\r\n                                <a\r\n                                  href={sub.to}\r\n                                  rel=\"noopener noreferrer\"\r\n                                  target=\"_blank\"\r\n                                >\r\n                                  <i className={sub.icon} />{' '}\r\n                                  <IntlMessages id={sub.label} />\r\n                                </a>\r\n                              ) : sub.subs && sub.subs.length > 0 ? (\r\n                                <>\r\n                                  <NavLink\r\n                                    className={`rotate-arrow-icon opacity-50 ${\r\n                                      collapsedMenus.indexOf(\r\n                                        `${item.id}_${index}`\r\n                                      ) === -1\r\n                                        ? ''\r\n                                        : 'collapsed'\r\n                                      }`}\r\n                                    to={sub.to}\r\n                                    id={`${item.id}_${index}`}\r\n                                    onClick={(e) =>\r\n                                      this.toggleMenuCollapse(\r\n                                        e,\r\n                                        `${item.id}_${index}`\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    <i className=\"simple-icon-arrow-down\" />{' '}\r\n                                    <IntlMessages id={sub.label} />\r\n                                  </NavLink>\r\n\r\n                                  <Collapse\r\n                                    isOpen={\r\n                                      collapsedMenus.indexOf(\r\n                                        `${item.id}_${index}`\r\n                                      ) === -1\r\n                                    }\r\n                                  >\r\n                                    <Nav className=\"third-level-menu\">\r\n                                      {this.filteredList(sub.subs).map((thirdSub, thirdIndex) => {\r\n                                        return (\r\n                                          <NavItem\r\n                                            key={`${item.id}_${index}_${thirdIndex}`}\r\n                                          >\r\n                                            {thirdSub.newWindow ? (\r\n                                              <a\r\n                                                href={thirdSub.to}\r\n                                                rel=\"noopener noreferrer\"\r\n                                                target=\"_blank\"\r\n                                              >\r\n                                                <i className={thirdSub.icon} />{' '}\r\n                                                <IntlMessages\r\n                                                  id={thirdSub.label}\r\n                                                />\r\n                                              </a>\r\n                                            ) : (\r\n                                                <NavLink to={thirdSub.to}>\r\n                                                  <i className={thirdSub.icon} />{' '}\r\n                                                  <IntlMessages\r\n                                                    id={thirdSub.label}\r\n                                                  />\r\n                                                </NavLink>\r\n                                              )}\r\n                                          </NavItem>\r\n                                        );\r\n                                      })}\r\n                                    </Nav>\r\n                                  </Collapse>\r\n                                </>\r\n                              ) : (\r\n                                    <NavLink to={sub.to}>\r\n                                      <i className={sub.icon} />{' '}\r\n                                      <IntlMessages id={sub.label} />\r\n                                    </NavLink>\r\n                                  )}\r\n                            </NavItem>\r\n                          );\r\n                        })}\r\n                    </Nav>\r\n                  );\r\n                })}\r\n            </PerfectScrollbar>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ menu, authUser }) => {\r\n  const {\r\n    containerClassnames,\r\n    subHiddenBreakpoint,\r\n    menuHiddenBreakpoint,\r\n    menuClickCount,\r\n    selectedMenuHasSubItems,\r\n  } = menu;\r\n\r\n  const { currentUser } = authUser;\r\n  return {\r\n    containerClassnames,\r\n    subHiddenBreakpoint,\r\n    menuHiddenBreakpoint,\r\n    menuClickCount,\r\n    selectedMenuHasSubItems,\r\n    currentUser\r\n  };\r\n};\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    setContainerClassnames,\r\n    addContainerClassname,\r\n    changeDefaultClassnames,\r\n    changeSelectedMenuHasSubItems,\r\n  })(Sidebar)\r\n);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Row } from 'reactstrap';\r\nimport { Colxx } from '../../components/common/CustomBootstrap';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"page-footer\">\r\n      <div className=\"footer-content\">\r\n        <div className=\"container-fluid\">\r\n          <Row>\r\n            <Colxx xxs=\"12\" sm=\"6\">\r\n              <p className=\"mb-0 text-muted\">Desarrollado por: <a href=\"https://www.auconsis.com.ec\" target=\"_blank\">  Auconsis</a></p>\r\n            </Colxx>\r\n     {/*        <Colxx className=\"col-sm-6 d-none d-sm-block\">\r\n              <ul className=\"breadcrumb pt-0 pr-0 float-right\">\r\n                <li className=\"breadcrumb-item mb-0\">\r\n                  <NavLink className=\"btn-link\" to=\"#\" location={{}}>\r\n                    Review\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"breadcrumb-item mb-0\">\r\n                  <NavLink className=\"btn-link\" to=\"#\" location={{}}>\r\n                    Purchase\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"breadcrumb-item mb-0\">\r\n                  <NavLink className=\"btn-link\" to=\"#\" location={{}}>\r\n                    Docs\r\n                  </NavLink>\r\n                </li>\r\n              </ul>\r\n            </Colxx> */}\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport TopNav from '../containers/navs/Topnav';\r\nimport Sidebar from '../containers/navs/Sidebar';\r\nimport Footer from '../containers/navs/Footer';\r\n\r\nconst AppLayout = ({ containerClassnames, children, history }) => {\r\n  return (\r\n    <div id=\"app-container\" className={containerClassnames}>\r\n      <TopNav history={history} />\r\n      <Sidebar />\r\n      <main>\r\n        <div className=\"container-fluid\">{children}</div>\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = ({ menu }) => {\r\n  const { containerClassnames } = menu;\r\n  return { containerClassnames };\r\n};\r\nconst mapActionToProps = {};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapActionToProps)(AppLayout)\r\n);\r\n","import React, { Suspense } from 'react';\r\nimport { Route, withRouter, Switch, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport AppLayout from '../../layout/AppLayout';\r\n// import { ProtectedRoute, UserRole } from '../../helpers/authHelper';\r\n\r\nconst Gogo = React.lazy(() =>\r\n  import(/* webpackChunkName: \"viwes-gogo\" */ './gogo')\r\n);\r\nconst SecondMenu = React.lazy(() =>\r\n  import(/* webpackChunkName: \"viwes-second-menu\" */ './second-menu')\r\n);\r\nconst BlankPage = React.lazy(() =>\r\n  import(/* webpackChunkName: \"viwes-blank-page\" */ './blank-page')\r\n);\r\n\r\nconst App = ({ match }) => {\r\n  return (\r\n    <AppLayout>\r\n      <div className=\"dashboard-wrapper\">\r\n        <Suspense fallback={<div className=\"loading\" />}>\r\n          <Switch>\r\n            <Redirect exact from={`${match.url}/`} to={`${match.url}/gogo`} />\r\n            <Route\r\n              path={`${match.url}/gogo`}\r\n              render={(props) => <Gogo {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/second-menu`}\r\n              render={(props) => <SecondMenu {...props} />}\r\n            />\r\n            {/* <ProtectedRoute\r\n                    path={`${match.url}/second-menu`}\r\n                    component={SecondMenu}\r\n                    roles={[UserRole.Admin]}\r\n            /> */}\r\n            <Route\r\n              path={`${match.url}/blank-page`}\r\n              render={(props) => <BlankPage {...props} />}\r\n            />\r\n            <Redirect to=\"/error\" />\r\n          </Switch>\r\n        </Suspense>\r\n      </div>\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ menu }) => {\r\n  const { containerClassnames } = menu;\r\n  return { containerClassnames };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, {})(App));\r\n","import React from 'react';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\n\r\nconst InjectMassage = (props) => <FormattedMessage {...props} />;\r\n\r\nexport default injectIntl(InjectMassage, {\r\n  withRef: false,\r\n});\r\n","import React from 'react';\r\nimport { Col } from 'reactstrap';\r\n\r\nconst Colxx = (props) => (\r\n  <Col {...props} widths={['xxs', 'xs', 'sm', 'md', 'lg', 'xl', 'xxl']} />\r\n);\r\nconst Separator = ({ className }) => (\r\n  <div className={`separator ${className}`} />\r\n);\r\nexport { Colxx, Separator };\r\n"],"sourceRoot":""}